// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: proto/p2p.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=Target,proto3" json:"Target,omitempty"`
}

func (x *GetPeersRequest) Reset() {
	*x = GetPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersRequest) ProtoMessage() {}

func (x *GetPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersRequest.ProtoReflect.Descriptor instead.
func (*GetPeersRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{0}
}

func (x *GetPeersRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type GetPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []string `protobuf:"bytes,1,rep,name=Peers,proto3" json:"Peers,omitempty"`
}

func (x *GetPeersResponse) Reset() {
	*x = GetPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersResponse) ProtoMessage() {}

func (x *GetPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersResponse.ProtoReflect.Descriptor instead.
func (*GetPeersResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{1}
}

func (x *GetPeersResponse) GetPeers() []string {
	if x != nil {
		return x.Peers
	}
	return nil
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{2}
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncToBlockHeight  uint32 `protobuf:"varint,1,opt,name=SyncToBlockHeight,proto3" json:"SyncToBlockHeight,omitempty"`
	MaxBlockHeightSeen uint32 `protobuf:"varint,2,opt,name=MaxBlockHeightSeen,proto3" json:"MaxBlockHeightSeen,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{3}
}

func (x *StatusResponse) GetSyncToBlockHeight() uint32 {
	if x != nil {
		return x.SyncToBlockHeight
	}
	return 0
}

func (x *StatusResponse) GetMaxBlockHeightSeen() uint32 {
	if x != nil {
		return x.MaxBlockHeightSeen
	}
	return 0
}

type GetBlockHeadersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumbers []uint32 `protobuf:"varint,1,rep,packed,name=BlockNumbers,proto3" json:"BlockNumbers,omitempty"`
}

func (x *GetBlockHeadersRequest) Reset() {
	*x = GetBlockHeadersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeadersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeadersRequest) ProtoMessage() {}

func (x *GetBlockHeadersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeadersRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHeadersRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{4}
}

func (x *GetBlockHeadersRequest) GetBlockNumbers() []uint32 {
	if x != nil {
		return x.BlockNumbers
	}
	return nil
}

type GetBlockHeadersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeaders [][]byte `protobuf:"bytes,1,rep,name=BlockHeaders,proto3" json:"BlockHeaders,omitempty"`
}

func (x *GetBlockHeadersResponse) Reset() {
	*x = GetBlockHeadersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeadersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeadersResponse) ProtoMessage() {}

func (x *GetBlockHeadersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeadersResponse.ProtoReflect.Descriptor instead.
func (*GetBlockHeadersResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{5}
}

func (x *GetBlockHeadersResponse) GetBlockHeaders() [][]byte {
	if x != nil {
		return x.BlockHeaders
	}
	return nil
}

type GetPendingTxsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHashes [][]byte `protobuf:"bytes,1,rep,name=TxHashes,proto3" json:"TxHashes,omitempty"`
}

func (x *GetPendingTxsRequest) Reset() {
	*x = GetPendingTxsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingTxsRequest) ProtoMessage() {}

func (x *GetPendingTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingTxsRequest.ProtoReflect.Descriptor instead.
func (*GetPendingTxsRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{6}
}

func (x *GetPendingTxsRequest) GetTxHashes() [][]byte {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

type GetPendingTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs [][]byte `protobuf:"bytes,1,rep,name=Txs,proto3" json:"Txs,omitempty"`
}

func (x *GetPendingTxsResponse) Reset() {
	*x = GetPendingTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPendingTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPendingTxsResponse) ProtoMessage() {}

func (x *GetPendingTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPendingTxsResponse.ProtoReflect.Descriptor instead.
func (*GetPendingTxsResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{7}
}

func (x *GetPendingTxsResponse) GetTxs() [][]byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

type GetMinedTxsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHashes [][]byte `protobuf:"bytes,1,rep,name=TxHashes,proto3" json:"TxHashes,omitempty"`
}

func (x *GetMinedTxsRequest) Reset() {
	*x = GetMinedTxsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinedTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinedTxsRequest) ProtoMessage() {}

func (x *GetMinedTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinedTxsRequest.ProtoReflect.Descriptor instead.
func (*GetMinedTxsRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{8}
}

func (x *GetMinedTxsRequest) GetTxHashes() [][]byte {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

type GetMinedTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs [][]byte `protobuf:"bytes,1,rep,name=Txs,proto3" json:"Txs,omitempty"`
}

func (x *GetMinedTxsResponse) Reset() {
	*x = GetMinedTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinedTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinedTxsResponse) ProtoMessage() {}

func (x *GetMinedTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinedTxsResponse.ProtoReflect.Descriptor instead.
func (*GetMinedTxsResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{9}
}

func (x *GetMinedTxsResponse) GetTxs() [][]byte {
	if x != nil {
		return x.Txs
	}
	return nil
}

type GetSnapShotNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height   uint32 `protobuf:"varint,1,opt,name=Height,proto3" json:"Height,omitempty"`
	NodeHash []byte `protobuf:"bytes,2,opt,name=NodeHash,proto3" json:"NodeHash,omitempty"`
}

func (x *GetSnapShotNodeRequest) Reset() {
	*x = GetSnapShotNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapShotNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapShotNodeRequest) ProtoMessage() {}

func (x *GetSnapShotNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapShotNodeRequest.ProtoReflect.Descriptor instead.
func (*GetSnapShotNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{10}
}

func (x *GetSnapShotNodeRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetSnapShotNodeRequest) GetNodeHash() []byte {
	if x != nil {
		return x.NodeHash
	}
	return nil
}

type GetSnapShotNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node []byte `protobuf:"bytes,1,opt,name=Node,proto3" json:"Node,omitempty"`
}

func (x *GetSnapShotNodeResponse) Reset() {
	*x = GetSnapShotNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapShotNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapShotNodeResponse) ProtoMessage() {}

func (x *GetSnapShotNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapShotNodeResponse.ProtoReflect.Descriptor instead.
func (*GetSnapShotNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{11}
}

func (x *GetSnapShotNodeResponse) GetNode() []byte {
	if x != nil {
		return x.Node
	}
	return nil
}

type GetSnapShotStateDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *GetSnapShotStateDataRequest) Reset() {
	*x = GetSnapShotStateDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapShotStateDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapShotStateDataRequest) ProtoMessage() {}

func (x *GetSnapShotStateDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapShotStateDataRequest.ProtoReflect.Descriptor instead.
func (*GetSnapShotStateDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{12}
}

func (x *GetSnapShotStateDataRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetSnapShotStateDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetSnapShotStateDataResponse) Reset() {
	*x = GetSnapShotStateDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapShotStateDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapShotStateDataResponse) ProtoMessage() {}

func (x *GetSnapShotStateDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapShotStateDataResponse.ProtoReflect.Descriptor instead.
func (*GetSnapShotStateDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{13}
}

func (x *GetSnapShotStateDataResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSnapShotHdrNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeHash []byte `protobuf:"bytes,2,opt,name=NodeHash,proto3" json:"NodeHash,omitempty"`
}

func (x *GetSnapShotHdrNodeRequest) Reset() {
	*x = GetSnapShotHdrNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapShotHdrNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapShotHdrNodeRequest) ProtoMessage() {}

func (x *GetSnapShotHdrNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapShotHdrNodeRequest.ProtoReflect.Descriptor instead.
func (*GetSnapShotHdrNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{14}
}

func (x *GetSnapShotHdrNodeRequest) GetNodeHash() []byte {
	if x != nil {
		return x.NodeHash
	}
	return nil
}

type GetSnapShotHdrNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node []byte `protobuf:"bytes,1,opt,name=Node,proto3" json:"Node,omitempty"`
}

func (x *GetSnapShotHdrNodeResponse) Reset() {
	*x = GetSnapShotHdrNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnapShotHdrNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapShotHdrNodeResponse) ProtoMessage() {}

func (x *GetSnapShotHdrNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapShotHdrNodeResponse.ProtoReflect.Descriptor instead.
func (*GetSnapShotHdrNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{15}
}

func (x *GetSnapShotHdrNodeResponse) GetNode() []byte {
	if x != nil {
		return x.Node
	}
	return nil
}

type GossipProposalMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal []byte `protobuf:"bytes,1,opt,name=Proposal,proto3" json:"Proposal,omitempty"`
}

func (x *GossipProposalMessage) Reset() {
	*x = GossipProposalMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipProposalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipProposalMessage) ProtoMessage() {}

func (x *GossipProposalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipProposalMessage.ProtoReflect.Descriptor instead.
func (*GossipProposalMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{16}
}

func (x *GossipProposalMessage) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type GossipProposalAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipProposalAck) Reset() {
	*x = GossipProposalAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipProposalAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipProposalAck) ProtoMessage() {}

func (x *GossipProposalAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipProposalAck.ProtoReflect.Descriptor instead.
func (*GossipProposalAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{17}
}

type GossipPreVoteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreVote []byte `protobuf:"bytes,1,opt,name=PreVote,proto3" json:"PreVote,omitempty"`
}

func (x *GossipPreVoteMessage) Reset() {
	*x = GossipPreVoteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreVoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreVoteMessage) ProtoMessage() {}

func (x *GossipPreVoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreVoteMessage.ProtoReflect.Descriptor instead.
func (*GossipPreVoteMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{18}
}

func (x *GossipPreVoteMessage) GetPreVote() []byte {
	if x != nil {
		return x.PreVote
	}
	return nil
}

type GossipPreVoteAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipPreVoteAck) Reset() {
	*x = GossipPreVoteAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreVoteAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreVoteAck) ProtoMessage() {}

func (x *GossipPreVoteAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreVoteAck.ProtoReflect.Descriptor instead.
func (*GossipPreVoteAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{19}
}

type GossipPreVoteNilMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreVoteNil []byte `protobuf:"bytes,1,opt,name=PreVoteNil,proto3" json:"PreVoteNil,omitempty"`
}

func (x *GossipPreVoteNilMessage) Reset() {
	*x = GossipPreVoteNilMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreVoteNilMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreVoteNilMessage) ProtoMessage() {}

func (x *GossipPreVoteNilMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreVoteNilMessage.ProtoReflect.Descriptor instead.
func (*GossipPreVoteNilMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{20}
}

func (x *GossipPreVoteNilMessage) GetPreVoteNil() []byte {
	if x != nil {
		return x.PreVoteNil
	}
	return nil
}

type GossipPreVoteNilAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipPreVoteNilAck) Reset() {
	*x = GossipPreVoteNilAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreVoteNilAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreVoteNilAck) ProtoMessage() {}

func (x *GossipPreVoteNilAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreVoteNilAck.ProtoReflect.Descriptor instead.
func (*GossipPreVoteNilAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{21}
}

type GossipPreCommitMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreCommit []byte `protobuf:"bytes,1,opt,name=PreCommit,proto3" json:"PreCommit,omitempty"`
}

func (x *GossipPreCommitMessage) Reset() {
	*x = GossipPreCommitMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreCommitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreCommitMessage) ProtoMessage() {}

func (x *GossipPreCommitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreCommitMessage.ProtoReflect.Descriptor instead.
func (*GossipPreCommitMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{22}
}

func (x *GossipPreCommitMessage) GetPreCommit() []byte {
	if x != nil {
		return x.PreCommit
	}
	return nil
}

type GossipPreCommitAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipPreCommitAck) Reset() {
	*x = GossipPreCommitAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreCommitAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreCommitAck) ProtoMessage() {}

func (x *GossipPreCommitAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreCommitAck.ProtoReflect.Descriptor instead.
func (*GossipPreCommitAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{23}
}

type GossipPreCommitNilMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreCommitNil []byte `protobuf:"bytes,1,opt,name=PreCommitNil,proto3" json:"PreCommitNil,omitempty"`
}

func (x *GossipPreCommitNilMessage) Reset() {
	*x = GossipPreCommitNilMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreCommitNilMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreCommitNilMessage) ProtoMessage() {}

func (x *GossipPreCommitNilMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreCommitNilMessage.ProtoReflect.Descriptor instead.
func (*GossipPreCommitNilMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{24}
}

func (x *GossipPreCommitNilMessage) GetPreCommitNil() []byte {
	if x != nil {
		return x.PreCommitNil
	}
	return nil
}

type GossipPreCommitNilAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipPreCommitNilAck) Reset() {
	*x = GossipPreCommitNilAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipPreCommitNilAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipPreCommitNilAck) ProtoMessage() {}

func (x *GossipPreCommitNilAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipPreCommitNilAck.ProtoReflect.Descriptor instead.
func (*GossipPreCommitNilAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{25}
}

type GossipNextRoundMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextRound []byte `protobuf:"bytes,1,opt,name=NextRound,proto3" json:"NextRound,omitempty"`
}

func (x *GossipNextRoundMessage) Reset() {
	*x = GossipNextRoundMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipNextRoundMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipNextRoundMessage) ProtoMessage() {}

func (x *GossipNextRoundMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipNextRoundMessage.ProtoReflect.Descriptor instead.
func (*GossipNextRoundMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{26}
}

func (x *GossipNextRoundMessage) GetNextRound() []byte {
	if x != nil {
		return x.NextRound
	}
	return nil
}

type GossipNextRoundAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipNextRoundAck) Reset() {
	*x = GossipNextRoundAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipNextRoundAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipNextRoundAck) ProtoMessage() {}

func (x *GossipNextRoundAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipNextRoundAck.ProtoReflect.Descriptor instead.
func (*GossipNextRoundAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{27}
}

type GossipNextHeightMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextHeight []byte `protobuf:"bytes,1,opt,name=NextHeight,proto3" json:"NextHeight,omitempty"`
}

func (x *GossipNextHeightMessage) Reset() {
	*x = GossipNextHeightMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipNextHeightMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipNextHeightMessage) ProtoMessage() {}

func (x *GossipNextHeightMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipNextHeightMessage.ProtoReflect.Descriptor instead.
func (*GossipNextHeightMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{28}
}

func (x *GossipNextHeightMessage) GetNextHeight() []byte {
	if x != nil {
		return x.NextHeight
	}
	return nil
}

type GossipNextHeightAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipNextHeightAck) Reset() {
	*x = GossipNextHeightAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipNextHeightAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipNextHeightAck) ProtoMessage() {}

func (x *GossipNextHeightAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipNextHeightAck.ProtoReflect.Descriptor instead.
func (*GossipNextHeightAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{29}
}

type GossipBlockHeaderMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeader []byte `protobuf:"bytes,1,opt,name=BlockHeader,proto3" json:"BlockHeader,omitempty"`
}

func (x *GossipBlockHeaderMessage) Reset() {
	*x = GossipBlockHeaderMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipBlockHeaderMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipBlockHeaderMessage) ProtoMessage() {}

func (x *GossipBlockHeaderMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipBlockHeaderMessage.ProtoReflect.Descriptor instead.
func (*GossipBlockHeaderMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{30}
}

func (x *GossipBlockHeaderMessage) GetBlockHeader() []byte {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

type GossipBlockHeaderAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipBlockHeaderAck) Reset() {
	*x = GossipBlockHeaderAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipBlockHeaderAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipBlockHeaderAck) ProtoMessage() {}

func (x *GossipBlockHeaderAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipBlockHeaderAck.ProtoReflect.Descriptor instead.
func (*GossipBlockHeaderAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{31}
}

type GossipTransactionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction []byte `protobuf:"bytes,1,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
}

func (x *GossipTransactionMessage) Reset() {
	*x = GossipTransactionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipTransactionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipTransactionMessage) ProtoMessage() {}

func (x *GossipTransactionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipTransactionMessage.ProtoReflect.Descriptor instead.
func (*GossipTransactionMessage) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{32}
}

func (x *GossipTransactionMessage) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GossipTransactionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GossipTransactionAck) Reset() {
	*x = GossipTransactionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_p2p_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GossipTransactionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipTransactionAck) ProtoMessage() {}

func (x *GossipTransactionAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_p2p_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipTransactionAck.ProtoReflect.Descriptor instead.
func (*GossipTransactionAck) Descriptor() ([]byte, []int) {
	return file_proto_p2p_proto_rawDescGZIP(), []int{33}
}

var File_proto_p2p_proto protoreflect.FileDescriptor

var file_proto_p2p_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x32, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73, 0x22, 0x0f, 0x0a,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x4d, 0x61, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x4d, 0x61, 0x78, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0x3c,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3d, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22,
	0x29, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x78, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x54, 0x78, 0x73, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x08, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x03, 0x54, 0x78, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x53, 0x68, 0x6f, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68,
	0x6f, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x22, 0x2f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x4b, 0x65, 0x79, 0x22, 0x32, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68,
	0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x64, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x64, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x4e, 0x6f,
	0x64, 0x65, 0x22, 0x33, 0x0a, 0x15, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x6f, 0x73, 0x73, 0x69,
	0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x22, 0x30, 0x0a, 0x14,
	0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x22, 0x12,
	0x0a, 0x10, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x41,
	0x63, 0x6b, 0x22, 0x39, 0x0a, 0x17, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56,
	0x6f, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x22, 0x15, 0x0a,
	0x13, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x69,
	0x6c, 0x41, 0x63, 0x6b, 0x22, 0x36, 0x0a, 0x16, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41,
	0x63, 0x6b, 0x22, 0x3f, 0x0a, 0x19, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4e, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4e, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x4e, 0x69, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4e, 0x69, 0x6c, 0x41, 0x63, 0x6b, 0x22, 0x36, 0x0a, 0x16,
	0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e, 0x65,
	0x78, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x6b, 0x22, 0x39, 0x0a, 0x17, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e,
	0x65, 0x78, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x63, 0x6b, 0x22, 0x3c, 0x0a, 0x18,
	0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x6b, 0x22, 0x3c, 0x0a, 0x18, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x16, 0x0a, 0x14, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x32, 0xd4, 0x0a, 0x0a, 0x03, 0x50, 0x32, 0x50,
	0x12, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x73, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x54, 0x78, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68,
	0x6f, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x53,
	0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x64, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x53, 0x68, 0x6f, 0x74, 0x48, 0x64, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x64, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x47, 0x6f, 0x73, 0x73, 0x69,
	0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e,
	0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x6f, 0x73, 0x73,
	0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x10, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f,
	0x74, 0x65, 0x4e, 0x69, 0x6c, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4e, 0x69, 0x6c, 0x41, 0x63,
	0x6b, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x6b,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x12, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4e, 0x69, 0x6c, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x4e, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x4e, 0x69, 0x6c, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x47, 0x6f, 0x73,
	0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4e, 0x65, 0x78, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x47,
	0x6f, 0x73, 0x73, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0x4d, 0x0a, 0x0c, 0x50, 0x32, 0x50, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12,
	0x3d, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x73,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x08, 0x50, 0x32, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x2f, 0x61, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0xca,
	0x02, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0xe2, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_p2p_proto_rawDescOnce sync.Once
	file_proto_p2p_proto_rawDescData = file_proto_p2p_proto_rawDesc
)

func file_proto_p2p_proto_rawDescGZIP() []byte {
	file_proto_p2p_proto_rawDescOnce.Do(func() {
		file_proto_p2p_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_p2p_proto_rawDescData)
	})
	return file_proto_p2p_proto_rawDescData
}

var file_proto_p2p_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_proto_p2p_proto_goTypes = []interface{}{
	(*GetPeersRequest)(nil),              // 0: proto.GetPeersRequest
	(*GetPeersResponse)(nil),             // 1: proto.GetPeersResponse
	(*StatusRequest)(nil),                // 2: proto.StatusRequest
	(*StatusResponse)(nil),               // 3: proto.StatusResponse
	(*GetBlockHeadersRequest)(nil),       // 4: proto.GetBlockHeadersRequest
	(*GetBlockHeadersResponse)(nil),      // 5: proto.GetBlockHeadersResponse
	(*GetPendingTxsRequest)(nil),         // 6: proto.GetPendingTxsRequest
	(*GetPendingTxsResponse)(nil),        // 7: proto.GetPendingTxsResponse
	(*GetMinedTxsRequest)(nil),           // 8: proto.GetMinedTxsRequest
	(*GetMinedTxsResponse)(nil),          // 9: proto.GetMinedTxsResponse
	(*GetSnapShotNodeRequest)(nil),       // 10: proto.GetSnapShotNodeRequest
	(*GetSnapShotNodeResponse)(nil),      // 11: proto.GetSnapShotNodeResponse
	(*GetSnapShotStateDataRequest)(nil),  // 12: proto.GetSnapShotStateDataRequest
	(*GetSnapShotStateDataResponse)(nil), // 13: proto.GetSnapShotStateDataResponse
	(*GetSnapShotHdrNodeRequest)(nil),    // 14: proto.GetSnapShotHdrNodeRequest
	(*GetSnapShotHdrNodeResponse)(nil),   // 15: proto.GetSnapShotHdrNodeResponse
	(*GossipProposalMessage)(nil),        // 16: proto.GossipProposalMessage
	(*GossipProposalAck)(nil),            // 17: proto.GossipProposalAck
	(*GossipPreVoteMessage)(nil),         // 18: proto.GossipPreVoteMessage
	(*GossipPreVoteAck)(nil),             // 19: proto.GossipPreVoteAck
	(*GossipPreVoteNilMessage)(nil),      // 20: proto.GossipPreVoteNilMessage
	(*GossipPreVoteNilAck)(nil),          // 21: proto.GossipPreVoteNilAck
	(*GossipPreCommitMessage)(nil),       // 22: proto.GossipPreCommitMessage
	(*GossipPreCommitAck)(nil),           // 23: proto.GossipPreCommitAck
	(*GossipPreCommitNilMessage)(nil),    // 24: proto.GossipPreCommitNilMessage
	(*GossipPreCommitNilAck)(nil),        // 25: proto.GossipPreCommitNilAck
	(*GossipNextRoundMessage)(nil),       // 26: proto.GossipNextRoundMessage
	(*GossipNextRoundAck)(nil),           // 27: proto.GossipNextRoundAck
	(*GossipNextHeightMessage)(nil),      // 28: proto.GossipNextHeightMessage
	(*GossipNextHeightAck)(nil),          // 29: proto.GossipNextHeightAck
	(*GossipBlockHeaderMessage)(nil),     // 30: proto.GossipBlockHeaderMessage
	(*GossipBlockHeaderAck)(nil),         // 31: proto.GossipBlockHeaderAck
	(*GossipTransactionMessage)(nil),     // 32: proto.GossipTransactionMessage
	(*GossipTransactionAck)(nil),         // 33: proto.GossipTransactionAck
}
var file_proto_p2p_proto_depIdxs = []int32{
	2,  // 0: proto.P2P.Status:input_type -> proto.StatusRequest
	4,  // 1: proto.P2P.GetBlockHeaders:input_type -> proto.GetBlockHeadersRequest
	8,  // 2: proto.P2P.GetMinedTxs:input_type -> proto.GetMinedTxsRequest
	6,  // 3: proto.P2P.GetPendingTxs:input_type -> proto.GetPendingTxsRequest
	10, // 4: proto.P2P.GetSnapShotNode:input_type -> proto.GetSnapShotNodeRequest
	12, // 5: proto.P2P.GetSnapShotStateData:input_type -> proto.GetSnapShotStateDataRequest
	14, // 6: proto.P2P.GetSnapShotHdrNode:input_type -> proto.GetSnapShotHdrNodeRequest
	32, // 7: proto.P2P.GossipTransaction:input_type -> proto.GossipTransactionMessage
	16, // 8: proto.P2P.GossipProposal:input_type -> proto.GossipProposalMessage
	18, // 9: proto.P2P.GossipPreVote:input_type -> proto.GossipPreVoteMessage
	20, // 10: proto.P2P.GossipPreVoteNil:input_type -> proto.GossipPreVoteNilMessage
	22, // 11: proto.P2P.GossipPreCommit:input_type -> proto.GossipPreCommitMessage
	24, // 12: proto.P2P.GossipPreCommitNil:input_type -> proto.GossipPreCommitNilMessage
	26, // 13: proto.P2P.GossipNextRound:input_type -> proto.GossipNextRoundMessage
	28, // 14: proto.P2P.GossipNextHeight:input_type -> proto.GossipNextHeightMessage
	30, // 15: proto.P2P.GossipBlockHeader:input_type -> proto.GossipBlockHeaderMessage
	0,  // 16: proto.P2P.GetPeers:input_type -> proto.GetPeersRequest
	0,  // 17: proto.P2PDiscovery.GetPeers:input_type -> proto.GetPeersRequest
	3,  // 18: proto.P2P.Status:output_type -> proto.StatusResponse
	5,  // 19: proto.P2P.GetBlockHeaders:output_type -> proto.GetBlockHeadersResponse
	9,  // 20: proto.P2P.GetMinedTxs:output_type -> proto.GetMinedTxsResponse
	7,  // 21: proto.P2P.GetPendingTxs:output_type -> proto.GetPendingTxsResponse
	11, // 22: proto.P2P.GetSnapShotNode:output_type -> proto.GetSnapShotNodeResponse
	13, // 23: proto.P2P.GetSnapShotStateData:output_type -> proto.GetSnapShotStateDataResponse
	15, // 24: proto.P2P.GetSnapShotHdrNode:output_type -> proto.GetSnapShotHdrNodeResponse
	33, // 25: proto.P2P.GossipTransaction:output_type -> proto.GossipTransactionAck
	17, // 26: proto.P2P.GossipProposal:output_type -> proto.GossipProposalAck
	19, // 27: proto.P2P.GossipPreVote:output_type -> proto.GossipPreVoteAck
	21, // 28: proto.P2P.GossipPreVoteNil:output_type -> proto.GossipPreVoteNilAck
	23, // 29: proto.P2P.GossipPreCommit:output_type -> proto.GossipPreCommitAck
	25, // 30: proto.P2P.GossipPreCommitNil:output_type -> proto.GossipPreCommitNilAck
	27, // 31: proto.P2P.GossipNextRound:output_type -> proto.GossipNextRoundAck
	29, // 32: proto.P2P.GossipNextHeight:output_type -> proto.GossipNextHeightAck
	31, // 33: proto.P2P.GossipBlockHeader:output_type -> proto.GossipBlockHeaderAck
	1,  // 34: proto.P2P.GetPeers:output_type -> proto.GetPeersResponse
	1,  // 35: proto.P2PDiscovery.GetPeers:output_type -> proto.GetPeersResponse
	18, // [18:36] is the sub-list for method output_type
	0,  // [0:18] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_p2p_proto_init() }
func file_proto_p2p_proto_init() {
	if File_proto_p2p_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_p2p_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHeadersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHeadersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingTxsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPendingTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinedTxsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinedTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnapShotNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnapShotNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnapShotStateDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnapShotStateDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnapShotHdrNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnapShotHdrNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipProposalMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipProposalAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreVoteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreVoteAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreVoteNilMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreVoteNilAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreCommitMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreCommitAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreCommitNilMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipPreCommitNilAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipNextRoundMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipNextRoundAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipNextHeightMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipNextHeightAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipBlockHeaderMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipBlockHeaderAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipTransactionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_p2p_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GossipTransactionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_p2p_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_p2p_proto_goTypes,
		DependencyIndexes: file_proto_p2p_proto_depIdxs,
		MessageInfos:      file_proto_p2p_proto_msgTypes,
	}.Build()
	File_proto_p2p_proto = out.File
	file_proto_p2p_proto_rawDesc = nil
	file_proto_p2p_proto_goTypes = nil
	file_proto_p2p_proto_depIdxs = nil
}
