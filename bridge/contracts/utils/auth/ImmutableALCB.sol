// This file is auto-generated by hardhat generate-immutable-auth-contract task. DO NOT EDIT.
// SPDX-License-Identifier: MIT-open-group
pragma solidity ^0.8.16;

import "contracts/utils/DeterministicAddress.sol";
import "contracts/utils/auth/ImmutableFactory.sol";
import "contracts/interfaces/IAliceNetFactory.sol";

abstract contract ImmutableALCB is ImmutableFactory {
    address private immutable _alcb;
    error OnlyALCB(address sender, address expected);

    modifier onlyALCB() {
        if (msg.sender != _alcb) {
            revert OnlyALCB(msg.sender, _alcb);
        }
        _;
    }

    constructor() {
        _alcb = IAliceNetFactory(_factoryAddress()).lookup(_saltForALCB());
    }

    function _alcbAddress() internal view returns (address) {
        return _alcb;
    }

    function _saltForALCB() internal pure returns (bytes32) {
        return 0x414c434200000000000000000000000000000000000000000000000000000000;
    }
}
