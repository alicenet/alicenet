// Generated by ifacemaker. DO NOT EDIT.

package bindings

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// IValidatorStakingTransactor ...
type IValidatorStakingTransactor interface {
	// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
	//
	// Solidity: function approve(address to, uint256 tokenId) returns()
	Approve(opts *bind.TransactOpts, to common.Address, tokenId *big.Int) (*types.Transaction, error)
	// Burn is a paid mutator transaction binding the contract method 0x42966c68.
	//
	// Solidity: function burn(uint256 tokenID_) returns(uint256 payoutEth, uint256 payoutAToken)
	Burn(opts *bind.TransactOpts, tokenID_ *big.Int) (*types.Transaction, error)
	// BurnTo is a paid mutator transaction binding the contract method 0xea785a5e.
	//
	// Solidity: function burnTo(address to_, uint256 tokenID_) returns(uint256 payoutEth, uint256 payoutAToken)
	BurnTo(opts *bind.TransactOpts, to_ common.Address, tokenID_ *big.Int) (*types.Transaction, error)
	// CollectAllProfits is a paid mutator transaction binding the contract method 0x0df4b2dd.
	//
	// Solidity: function collectAllProfits(uint256 tokenID_) returns(uint256 payoutToken, uint256 payoutEth)
	CollectAllProfits(opts *bind.TransactOpts, tokenID_ *big.Int) (*types.Transaction, error)
	// CollectAllProfitsTo is a paid mutator transaction binding the contract method 0x8303fef7.
	//
	// Solidity: function collectAllProfitsTo(address to_, uint256 tokenID_) returns(uint256 payoutToken, uint256 payoutEth)
	CollectAllProfitsTo(opts *bind.TransactOpts, to_ common.Address, tokenID_ *big.Int) (*types.Transaction, error)
	// CollectEth is a paid mutator transaction binding the contract method 0x2a0d8bd1.
	//
	// Solidity: function collectEth(uint256 tokenID_) returns(uint256 payout)
	CollectEth(opts *bind.TransactOpts, tokenID_ *big.Int) (*types.Transaction, error)
	// CollectEthTo is a paid mutator transaction binding the contract method 0xbe444379.
	//
	// Solidity: function collectEthTo(address to_, uint256 tokenID_) returns(uint256 payout)
	CollectEthTo(opts *bind.TransactOpts, to_ common.Address, tokenID_ *big.Int) (*types.Transaction, error)
	// CollectToken is a paid mutator transaction binding the contract method 0xe35c3e28.
	//
	// Solidity: function collectToken(uint256 tokenID_) returns(uint256 payout)
	CollectToken(opts *bind.TransactOpts, tokenID_ *big.Int) (*types.Transaction, error)
	// CollectTokenTo is a paid mutator transaction binding the contract method 0x8853b950.
	//
	// Solidity: function collectTokenTo(address to_, uint256 tokenID_) returns(uint256 payout)
	CollectTokenTo(opts *bind.TransactOpts, to_ common.Address, tokenID_ *big.Int) (*types.Transaction, error)
	// DepositEth is a paid mutator transaction binding the contract method 0x99a89ecc.
	//
	// Solidity: function depositEth(uint8 magic_) payable returns()
	DepositEth(opts *bind.TransactOpts, magic_ uint8) (*types.Transaction, error)
	// DepositToken is a paid mutator transaction binding the contract method 0x8191f5e5.
	//
	// Solidity: function depositToken(uint8 magic_, uint256 amount_) returns()
	DepositToken(opts *bind.TransactOpts, magic_ uint8, amount_ *big.Int) (*types.Transaction, error)
	// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
	//
	// Solidity: function initialize() returns()
	Initialize(opts *bind.TransactOpts) (*types.Transaction, error)
	// LockOwnPosition is a paid mutator transaction binding the contract method 0xe42a673c.
	//
	// Solidity: function lockOwnPosition(uint256 tokenID_, uint256 lockDuration_) returns(uint256)
	LockOwnPosition(opts *bind.TransactOpts, tokenID_ *big.Int, lockDuration_ *big.Int) (*types.Transaction, error)
	// LockPosition is a paid mutator transaction binding the contract method 0x0cc65dfb.
	//
	// Solidity: function lockPosition(address caller_, uint256 tokenID_, uint256 lockDuration_) returns(uint256)
	LockPosition(opts *bind.TransactOpts, caller_ common.Address, tokenID_ *big.Int, lockDuration_ *big.Int) (*types.Transaction, error)
	// LockWithdraw is a paid mutator transaction binding the contract method 0x0e4eb15b.
	//
	// Solidity: function lockWithdraw(uint256 tokenID_, uint256 lockDuration_) returns(uint256)
	LockWithdraw(opts *bind.TransactOpts, tokenID_ *big.Int, lockDuration_ *big.Int) (*types.Transaction, error)
	// Mint is a paid mutator transaction binding the contract method 0xa0712d68.
	//
	// Solidity: function mint(uint256 amount_) returns(uint256 tokenID)
	Mint(opts *bind.TransactOpts, amount_ *big.Int) (*types.Transaction, error)
	// MintTo is a paid mutator transaction binding the contract method 0x2baf2acb.
	//
	// Solidity: function mintTo(address to_, uint256 amount_, uint256 lockDuration_) returns(uint256 tokenID)
	MintTo(opts *bind.TransactOpts, to_ common.Address, amount_ *big.Int, lockDuration_ *big.Int) (*types.Transaction, error)
	// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
	//
	// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
	SafeTransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error)
	// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
	//
	// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes data) returns()
	SafeTransferFrom0(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int, data []byte) (*types.Transaction, error)
	// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
	//
	// Solidity: function setApprovalForAll(address operator, bool approved) returns()
	SetApprovalForAll(opts *bind.TransactOpts, operator common.Address, approved bool) (*types.Transaction, error)
	// SkimExcessEth is a paid mutator transaction binding the contract method 0x971b505b.
	//
	// Solidity: function skimExcessEth(address to_) returns(uint256 excess)
	SkimExcessEth(opts *bind.TransactOpts, to_ common.Address) (*types.Transaction, error)
	// SkimExcessToken is a paid mutator transaction binding the contract method 0x7aa507fb.
	//
	// Solidity: function skimExcessToken(address to_) returns(uint256 excess)
	SkimExcessToken(opts *bind.TransactOpts, to_ common.Address) (*types.Transaction, error)
	// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
	//
	// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
	TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error)
	// TripCB is a paid mutator transaction binding the contract method 0xadfdc03f.
	//
	// Solidity: function tripCB() returns()
	TripCB(opts *bind.TransactOpts) (*types.Transaction, error)
}
