// Generated by ifacemaker. DO NOT EDIT.

package ethereum

import (
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/core/types"
)

// ISnapshotsTransactor ...
type ISnapshotsTransactor interface {
	// Initialize is a paid mutator transaction binding the contract method 0x3ecc0f5e.
	//
	// Solidity: function initialize(uint32 desperationDelay_, uint32 desperationFactor_) returns()
	Initialize(opts *bind.TransactOpts, desperationDelay_ uint32, desperationFactor_ uint32) (*types.Transaction, error)
	// MigrateSnapshots is a paid mutator transaction binding the contract method 0xae2728ea.
	//
	// Solidity: function migrateSnapshots(bytes[] groupSignature_, bytes[] bClaims_) returns(bool)
	MigrateSnapshots(opts *bind.TransactOpts, groupSignature_ [][]byte, bClaims_ [][]byte) (*types.Transaction, error)
	// SetMinimumIntervalBetweenSnapshots is a paid mutator transaction binding the contract method 0xeb7c7afe.
	//
	// Solidity: function setMinimumIntervalBetweenSnapshots(uint32 minimumIntervalBetweenSnapshots_) returns()
	SetMinimumIntervalBetweenSnapshots(opts *bind.TransactOpts, minimumIntervalBetweenSnapshots_ uint32) (*types.Transaction, error)
	// SetSnapshotDesperationDelay is a paid mutator transaction binding the contract method 0xc2e8fef2.
	//
	// Solidity: function setSnapshotDesperationDelay(uint32 desperationDelay_) returns()
	SetSnapshotDesperationDelay(opts *bind.TransactOpts, desperationDelay_ uint32) (*types.Transaction, error)
	// SetSnapshotDesperationFactor is a paid mutator transaction binding the contract method 0x3fa7a1ad.
	//
	// Solidity: function setSnapshotDesperationFactor(uint32 desperationFactor_) returns()
	SetSnapshotDesperationFactor(opts *bind.TransactOpts, desperationFactor_ uint32) (*types.Transaction, error)
	// Snapshot is a paid mutator transaction binding the contract method 0x08ca1f25.
	//
	// Solidity: function snapshot(bytes groupSignature_, bytes bClaims_) returns(bool)
	Snapshot(opts *bind.TransactOpts, groupSignature_ []byte, bClaims_ []byte) (*types.Transaction, error)
}
