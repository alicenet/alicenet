// Generated by ifacemaker. DO NOT EDIT.

package ethereum

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// IETHDKGTransactor ...
type IETHDKGTransactor interface {
	// AccuseParticipantDidNotDistributeShares is a paid mutator transaction binding the contract method 0xdae681bc.
	//
	// Solidity: function accuseParticipantDidNotDistributeShares(address[] dishonestAddresses) returns()
	AccuseParticipantDidNotDistributeShares(opts *bind.TransactOpts, dishonestAddresses []common.Address) (*types.Transaction, error)
	// AccuseParticipantDidNotSubmitGPKJ is a paid mutator transaction binding the contract method 0x7df24ee9.
	//
	// Solidity: function accuseParticipantDidNotSubmitGPKJ(address[] dishonestAddresses) returns()
	AccuseParticipantDidNotSubmitGPKJ(opts *bind.TransactOpts, dishonestAddresses []common.Address) (*types.Transaction, error)
	// AccuseParticipantDidNotSubmitKeyShares is a paid mutator transaction binding the contract method 0x043a6f12.
	//
	// Solidity: function accuseParticipantDidNotSubmitKeyShares(address[] dishonestAddresses) returns()
	AccuseParticipantDidNotSubmitKeyShares(opts *bind.TransactOpts, dishonestAddresses []common.Address) (*types.Transaction, error)
	// AccuseParticipantDistributedBadShares is a paid mutator transaction binding the contract method 0xedbe7bf7.
	//
	// Solidity: function accuseParticipantDistributedBadShares(address dishonestAddress, uint256[] encryptedShares, uint256[2][] commitments, uint256[2] sharedKey, uint256[2] sharedKeyCorrectnessProof) returns()
	AccuseParticipantDistributedBadShares(opts *bind.TransactOpts, dishonestAddress common.Address, encryptedShares []*big.Int, commitments [][2]*big.Int, sharedKey [2]*big.Int, sharedKeyCorrectnessProof [2]*big.Int) (*types.Transaction, error)
	// AccuseParticipantNotRegistered is a paid mutator transaction binding the contract method 0xf72c45b6.
	//
	// Solidity: function accuseParticipantNotRegistered(address[] dishonestAddresses) returns()
	AccuseParticipantNotRegistered(opts *bind.TransactOpts, dishonestAddresses []common.Address) (*types.Transaction, error)
	// AccuseParticipantSubmittedBadGPKJ is a paid mutator transaction binding the contract method 0x80001264.
	//
	// Solidity: function accuseParticipantSubmittedBadGPKJ(address[] validators, bytes32[] encryptedSharesHash, uint256[2][][] commitments, address dishonestAddress) returns()
	AccuseParticipantSubmittedBadGPKJ(opts *bind.TransactOpts, validators []common.Address, encryptedSharesHash [][32]byte, commitments [][][2]*big.Int, dishonestAddress common.Address) (*types.Transaction, error)
	// Complete is a paid mutator transaction binding the contract method 0x522e1177.
	//
	// Solidity: function complete() returns()
	Complete(opts *bind.TransactOpts) (*types.Transaction, error)
	// DistributeShares is a paid mutator transaction binding the contract method 0x80b97e01.
	//
	// Solidity: function distributeShares(uint256[] encryptedShares, uint256[2][] commitments) returns()
	DistributeShares(opts *bind.TransactOpts, encryptedShares []*big.Int, commitments [][2]*big.Int) (*types.Transaction, error)
	// Initialize is a paid mutator transaction binding the contract method 0xe4a30116.
	//
	// Solidity: function initialize(uint256 phaseLength_, uint256 confirmationLength_) returns()
	Initialize(opts *bind.TransactOpts, phaseLength_ *big.Int, confirmationLength_ *big.Int) (*types.Transaction, error)
	// InitializeETHDKG is a paid mutator transaction binding the contract method 0x57b51c9c.
	//
	// Solidity: function initializeETHDKG() returns()
	InitializeETHDKG(opts *bind.TransactOpts) (*types.Transaction, error)
	// MigrateValidators is a paid mutator transaction binding the contract method 0x4890465a.
	//
	// Solidity: function migrateValidators(address[] validatorsAccounts_, uint256[] validatorIndexes_, uint256[4][] validatorShares_, uint8 validatorCount_, uint256 epoch_, uint256 sideChainHeight_, uint256 ethHeight_, uint256[4] masterPublicKey_) returns()
	MigrateValidators(opts *bind.TransactOpts, validatorsAccounts_ []common.Address, validatorIndexes_ []*big.Int, validatorShares_ [][4]*big.Int, validatorCount_ uint8, epoch_ *big.Int, sideChainHeight_ *big.Int, ethHeight_ *big.Int, masterPublicKey_ [4]*big.Int) (*types.Transaction, error)
	// Register is a paid mutator transaction binding the contract method 0x3442af5c.
	//
	// Solidity: function register(uint256[2] publicKey) returns()
	Register(opts *bind.TransactOpts, publicKey [2]*big.Int) (*types.Transaction, error)
	// SetConfirmationLength is a paid mutator transaction binding the contract method 0xff3e5e45.
	//
	// Solidity: function setConfirmationLength(uint16 confirmationLength_) returns()
	SetConfirmationLength(opts *bind.TransactOpts, confirmationLength_ uint16) (*types.Transaction, error)
	// SetCustomAliceNetHeight is a paid mutator transaction binding the contract method 0xdf8d157b.
	//
	// Solidity: function setCustomAliceNetHeight(uint256 aliceNetHeight) returns()
	SetCustomAliceNetHeight(opts *bind.TransactOpts, aliceNetHeight *big.Int) (*types.Transaction, error)
	// SetPhaseLength is a paid mutator transaction binding the contract method 0x8a3c24cc.
	//
	// Solidity: function setPhaseLength(uint16 phaseLength_) returns()
	SetPhaseLength(opts *bind.TransactOpts, phaseLength_ uint16) (*types.Transaction, error)
	// SubmitGPKJ is a paid mutator transaction binding the contract method 0x101f49c1.
	//
	// Solidity: function submitGPKJ(uint256[4] gpkj) returns()
	SubmitGPKJ(opts *bind.TransactOpts, gpkj [4]*big.Int) (*types.Transaction, error)
	// SubmitKeyShare is a paid mutator transaction binding the contract method 0x62a6523e.
	//
	// Solidity: function submitKeyShare(uint256[2] keyShareG1, uint256[2] keyShareG1CorrectnessProof, uint256[4] keyShareG2) returns()
	SubmitKeyShare(opts *bind.TransactOpts, keyShareG1 [2]*big.Int, keyShareG1CorrectnessProof [2]*big.Int, keyShareG2 [4]*big.Int) (*types.Transaction, error)
	// SubmitMasterPublicKey is a paid mutator transaction binding the contract method 0xe8323224.
	//
	// Solidity: function submitMasterPublicKey(uint256[4] masterPublicKey_) returns()
	SubmitMasterPublicKey(opts *bind.TransactOpts, masterPublicKey_ [4]*big.Int) (*types.Transaction, error)
}
