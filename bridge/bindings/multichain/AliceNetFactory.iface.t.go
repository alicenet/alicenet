// Generated by ifacemaker. DO NOT EDIT.

package multichain

import (
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// IAliceNetFactoryTransactor ...
type IAliceNetFactoryTransactor interface {
	// AddNewExternalContract is a paid mutator transaction binding the contract method 0x6973694c.
	//
	// Solidity: function addNewExternalContract(bytes32 salt_, address newContractAddress_) returns()
	AddNewExternalContract(opts *bind.TransactOpts, salt_ [32]byte, newContractAddress_ common.Address) (*types.Transaction, error)
	// CallAny is a paid mutator transaction binding the contract method 0x12e6bf6a.
	//
	// Solidity: function callAny(address target_, uint256 value_, bytes cdata_) payable returns(bytes)
	CallAny(opts *bind.TransactOpts, target_ common.Address, value_ *big.Int, cdata_ []byte) (*types.Transaction, error)
	// DeployCreate is a paid mutator transaction binding the contract method 0x27fe1822.
	//
	// Solidity: function deployCreate(bytes deployCode_) returns(address contractAddr)
	DeployCreate(opts *bind.TransactOpts, deployCode_ []byte) (*types.Transaction, error)
	// DeployCreate2 is a paid mutator transaction binding the contract method 0x56f2a761.
	//
	// Solidity: function deployCreate2(uint256 value_, bytes32 salt_, bytes deployCode_) payable returns(address contractAddr)
	DeployCreate2(opts *bind.TransactOpts, value_ *big.Int, salt_ [32]byte, deployCode_ []byte) (*types.Transaction, error)
	// DeployCreateAndRegister is a paid mutator transaction binding the contract method 0xc56ca9ed.
	//
	// Solidity: function deployCreateAndRegister(bytes deployCode_, bytes32 salt_) returns(address contractAddr)
	DeployCreateAndRegister(opts *bind.TransactOpts, deployCode_ []byte, salt_ [32]byte) (*types.Transaction, error)
	// DeployProxy is a paid mutator transaction binding the contract method 0x39cab472.
	//
	// Solidity: function deployProxy(bytes32 salt_) returns(address contractAddr)
	DeployProxy(opts *bind.TransactOpts, salt_ [32]byte) (*types.Transaction, error)
	// InitializeContract is a paid mutator transaction binding the contract method 0xe1d7a8e4.
	//
	// Solidity: function initializeContract(address contract_, bytes initCallData_) returns()
	InitializeContract(opts *bind.TransactOpts, contract_ common.Address, initCallData_ []byte) (*types.Transaction, error)
	// MultiCall is a paid mutator transaction binding the contract method 0x248b1701.
	//
	// Solidity: function multiCall((address,uint256,bytes)[] cdata_) returns(bytes[])
	MultiCall(opts *bind.TransactOpts, cdata_ []AliceNetFactoryBaseMultiCallArgs) (*types.Transaction, error)
	// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
	//
	// Solidity: function setOwner(address newOwner_) returns()
	SetOwner(opts *bind.TransactOpts, newOwner_ common.Address) (*types.Transaction, error)
	// UpgradeProxy is a paid mutator transaction binding the contract method 0x043c9414.
	//
	// Solidity: function upgradeProxy(bytes32 salt_, address newImpl_, bytes initCallData_) returns()
	UpgradeProxy(opts *bind.TransactOpts, salt_ [32]byte, newImpl_ common.Address, initCallData_ []byte) (*types.Transaction, error)
	// Fallback is a paid mutator transaction binding the contract fallback function.
	//
	// Solidity: fallback() returns()
	Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error)
}
