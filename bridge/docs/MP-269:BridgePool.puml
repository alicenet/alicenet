@startuml name
Actor User
Participant "BridgePool" #LightBlue
Participant "ERC20Token" #LightGreen
Participant "BToken" #Orange
Participant "DepositNotifier" #LightGoldenRodYellow
Participant "Eths" #LightGray
Participant "Snapshots" #LightSalmon
title BridgePool

User -> ERC20Token : approve(BridgePool,erc20Amount)
User -> BToken : approve(BridgePool,bTokenFeeAmount)
User -> BridgePool : deposit(accountType_,aliceNetAddress_,erc20Amount_,bTokenFeeAmount_,from_)
group deposit
    group transfer       
        ERC20Token --> BridgePool : erc20Amount
        BToken --> BridgePool: bTokenFeeAmount
    end
    group burn        
        BridgePool -> BridgePool : burnTo(BridgePool, bTokensFeeAmount)
        Eths --> BridgePool
    end
    group notifyDeposit        
        BridgePool -> DepositNotifier: doEmit(_saltForBridgePool(),_erc20TokenContract,erc20Amount_,from_)
    end
end
User -> BridgePool : withdraw(encodedMerkleProof, burnedUTXO, receiver)
group withdraw 
    group verify merkle proof
        BridgePool -> Snapshots: bClaims = getBlockClaimsFromLatestSnapshot()
        BridgePool -> BridgePool : merkleProof.checkProof(bClaims.stateRoot, merkleProof.computeLeafHash()),
    end
    group transfer       
        ERC20Token --> User: burnedUTXO.amount
    end
end
@enduml


